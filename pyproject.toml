[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "datalexir"
version = "0.1.0"
authors = [
    {name = "Rémi Verschuur", email = "remi.verschuur@example.com"},
]
description = "Une bibliothèque Python pour l'exploration interactive de données et la génération automatique de pipelines"
readme = "README.md"
license = {text = "Apache License 2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["data", "exploration", "pandas", "spark", "pipeline", "jupyter", "notebook", "data-science"]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "ipywidgets>=7.6.0",
    "ipython>=7.0.0",
    "matplotlib>=3.3.0",
    "jupyter>=1.0.0",
]

[project.optional-dependencies]
spark = ["pyspark>=3.0.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "jupyter>=1.0",
    "notebook>=6.0",
    "types-setuptools",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.17",
]
all = ["datalexir[spark,dev,docs]"]

[project.urls]
"Homepage" = "https://github.com/remiv1/data_elexir"
"Bug Reports" = "https://github.com/remiv1/data_elexir/issues"
"Source" = "https://github.com/remiv1/data_elexir"
"Documentation" = "https://github.com/remiv1/data_elexir/blob/main/README.md"

[tool.setuptools]
packages = ["datalexir", "datalexir.elexbook", "datalexir.elexdas", "datalexir.elexpark"]

[tool.setuptools.package-data]
datalexir = ["*.json", "*.yaml", "*.yml"]

# Configuration pour Black (formatage de code)
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Configuration pour pytest
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Configuration pour la couverture de code
[tool.coverage.run]
source = ["datalexir"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Configuration pour mypy (vérification de types)
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "ipywidgets.*",
    "IPython.*",
    "pyspark.*",
]
ignore_missing_imports = true
